import { INestApplication, ValidationPipe } from '@nestjs/common';
import { ConfigService } from '@nestjs/config';
import { NestFactory } from '@nestjs/core';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';

import { AppModule } from './app.module';

function initSwagger(app: INestApplication): void {
  const documentConfig = new DocumentBuilder()
    .setTitle('Douglas Data Capture Platform API')
    .setDescription('This is the autogenerated API documentation for the Douglas Data Capture Platform.')
    .setVersion('1.0')
    .addTag('instruments')
    .build();
  const document = SwaggerModule.createDocument(app, documentConfig);
  SwaggerModule.setup('api', app, document);
}

async function bootstrap(): Promise<void> {
  const app = await NestFactory.create(AppModule);
  app.enableCors();
  app.setGlobalPrefix('/api');
  app.useGlobalPipes(new ValidationPipe({
    forbidNonWhitelisted: true,
    transform: true
  }));
  
  const configService = app.get(ConfigService);
  const port = configService.get('PORT') as number;

  initSwagger(app);
  await app.listen(port);
  console.log(`Application is running on: ${await app.getUrl()}`);
}

void bootstrap();
