---
openapi: '3.0.0'
info:
  title: Douglas Data Capture Platform API
  description: |
    The Douglas Data Capture Platform is a system that allows users to input, 
    store, and retrieve data. It is based on a REST API, which stands for 
    Representational State Transfer Application Programming Interface. This 
    type of API is designed to be easy to use and flexible, and follows a 
    set of architectural principles that make it ideal for building web services.

    The Douglas Data Capture Platform API includes a variety of endpoints, or specific
    locations within the API that perform a specific function. These endpoints allow 
    authorized users to access and manipulate data stored within the platform. The API accepts 
    form-encoded request bodies, which means that a client can submit data to the API in
    a format that is easy to read and interpret. The API then processes this data and returns
    a JSON-encoded response, which is the standard format for exchanging data over the web.

    Authentication for the Douglas Data Capture Platform API is handled using JSON Web Tokens (JWTs).
    JWTs are a secure way of transmitting information between parties, and are often used to 
    authenticate API requests. This ensures that only authorized users are able to access and manipulate 
    data within the platform.
  license:
    name: AGPL-3.0
    url: https://www.gnu.org/licenses/agpl-3.0.txt
  contact:
    name: Joshua Unrau
    email: joshua.unrau@mail.mcgill.ca
  version: '1.0'
tags:
  - name: Authentication
    description: |
      The API uses JSON Web Tokens (JWTs) to identify and authorize users. When a user attempts to 
      log in to the system, their password is compared to a hashed and salted version stored in 
      our database. If the password is valid, a JWT is created with a payload that encodes various 
      data about the user, including any relevant permissions or roles.

      This payload is then signed using a private key, which is a secret value known only to the 
      server. The signed payload is returned to the client in the form of a JWT. On requests to 
      protected endpoints within the API, the client must present the JWT as proof of their identity. 
      The server then verifies the integrity of the payload by checking the signature against the 
      private key. If the signature is valid, the server can trust that the payload has not been 
      tampered with and can use the data contained within it to determine whether the now authenticated
      user is authorized to perform certain actions.

      For security reasons, the JWT is only valid for a limited time. This time limit, known as the
      "expiration time," is set by the server that issues the JWT and should be set to a relatively
      short time frame to reduce the risk of the token being compromised (e.g., by malware). Of course,
      the user may be using the client application for longer than 15 minutes, and it would be annoying for
      the user to interrupt the instrument they, or a subject, is completing to reauthenticate. 

      Therefore, in order to maintain a seamless user experience, the client (i.e., the application 
      or device using the JWT) can request a new JWT before it expires using both the current JWT and a
      refresh token. The refresh token is a special token that is issued along with the JWT, and is stored
      in our database (as a hashed value for security purposes). When the client sends a request for a 
      new JWT using the refresh token, the server can verify the authenticity of the request and issue 
      a new JWT without requiring the user to re-enter their password.

      This process allows for a secure and convenient user experience, as it allows the client to 
      continuously authenticate the user without requiring them to constantly enter their password. 
      At the same time, it also helps to maintain the security of the system, as the server can 
      verify the authenticity of the refresh token before issuing a new JWT.

  - name: Instruments
    description: |
      Instruments are tasks that may be completed by users, or delegated by users to other persons
      (e.g., surveys, questionnaires, symptom scales). Individuals with user-level permissions are 
      authorized to view and submit instruments that they are authorized to access. They may also 
      request all the instruments they are authorized to use. There is also functionality to add new
      instruments and store them in the database. However, at present, this functionality is reserved
      for administrators. 
  - name: Subjects
    description: TBD
  - name: Users
    description: TBD
